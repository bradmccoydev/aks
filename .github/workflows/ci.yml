name: CI

on:
  push:
    branches: [ main ]  

jobs:
  build:
    runs-on: "ubuntu-latest"
    container: bradmccoydev/terraform-plan-validator:latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      PATH_TO_TF_FILES: ./src
      
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Terraform Init
      run: |-
        cd $PATH_TO_TF_FILES
        terraform init
        
    - name: Generate TFSEC report
      run: |-
        cd $PATH_TO_TF_FILES
        tfsec . --soft-fail
        
    - name: Terraform Plan
      run: |-
        cd $PATH_TO_TF_FILES
        terraform plan -var-file=deployment/devops.tfvars -out $GITHUB_SHA.tfplan
        terraform show -json $GITHUB_SHA.tfplan > plan.json

    # - name: Setup Infracost
    #   uses: infracost/actions/setup@v1
    #   with:
    #     api-key: ${{ secrets.INFRACOST_API_KEY }}

    # - name: Generate Infracost JSON
    #   run: infracost breakdown --path plan.json --format json --out-file /tmp/infracost.json
    #   working-directory: ${{ env.working-directory }}

    # - name: Post Infracost comment
    #   uses: infracost/actions/comment@v1
    #   with:
    #     path: /tmp/infracost.json
    #     behavior: update

    # - name: Terraform Validate
    #   id: terraformValidate
    #   run: |-
    #     cd $PATH_TO_TF_FILES
    #     terraform show -json $GITHUB_SHA.tfplan > $GITHUB_SHA.json
    #     cp /terraform-plan-validator/app.env ./app.env
    #     cp /terraform-plan-validator/opa-azure-policy.rego ./opa-azure-policy.rego

    #     VALIDATION_PASSED=$(terraform-plan-validator check -p "$GITHUB_SHA.json" -c "azure")
    #     SCORE=$(terraform-plan-validator opascore -p "$GITHUB_SHA.json" -c "azure")
        
    #     echo "::set-output name=VALIDATION_PASSED::$VALIDATION_PASSED"
    #     echo "Validation result: $VALIDATION_PASSED"
    #     echo "OPA score: $SCORE"
    #     rm $GITHUB_SHA.json

    # - name: Terraform Auto Apply
    #   if: steps.terraformValidate.outputs.VALIDATION_PASSED == 'true'
    #   run: |-
    #     cd $PATH_TO_TF_FILES
    #     TF_PLAN="$GITHUB_SHA.tfplan"
    #     echo $TF_PLAN
    #     # terraform apply $TF_PLAN 
    #     rm $TF_PLAN

    # - name: Terraform Manual Apply
    #   if: steps.terraformValidate.outputs.VALIDATION_PASSED == 'false'
    #   run: |-
    #     cd $PATH_TO_TF_FILES
    #     TF_PLAN="$GITHUB_SHA.tfplan"
    #     echo $TF_PLAN
    #     # terraform apply $TF_PLAN 
    #     rm $TF_PLAN
