stages:
  - initialize
  - validate terraform
  - validate security
  - build
  - validate opa
  - deploy
  - destroy

before_script:
  - ls -lt $CI_PROJECT_DIR/environments/
  - cd $CI_PROJECT_DIR/environments/$TERRAFORM_ENV
  - terraform --version

image:
  name: odysseycloud/terraform-plan-validator:v1.0.1-tf1.0.11

variables:
  PLAN: $CI_PROJECT_DIR/environments/$TERRAFORM_ENV/plan.tfplan
  TERRAFORM_PLAN_PATH: $CI_PROJECT_DIR/environments/$TERRAFORM_ENV

cache:
  paths:
    - "$CI_PROJECT_DIR/environments/devops/.terraform"
    - "$CI_PROJECT_DIR/environments/dev/.terraform"
    - "$CI_PROJECT_DIR/environments/uat/.terraform"
    - "$CI_PROJECT_DIR/environments/prod/.terraform"
    
.validate_template: &validate_template
  stage: validate terraform
  script:
    - terraform validate

.tfsec_report_template: &tfsec_report_template
  stage: validate security
  script:
    - tfsec $TERRAFORM_PLAN_PATH --soft-fail

.plan_template: &plan_template
  stage: build
  script:
    - terraform plan -out=$PLAN
  artifacts:
    name: plan
    paths:
      - $PLAN

.terraform_plan_opa_validate_template: &terraform_plan_opa_validate_template
  script:
    - terraform show -json $TERRAFORM_PLAN_PATH/plan.tfplan > $TERRAFORM_PLAN_PATH/plan.json
    - cp /terraform-plan-validator/opa-aws-policy.rego ./opa-aws-policy.rego
    - cp /terraform-plan-validator/app.env ./app.env
    - cat ./opa-aws-policy.rego
    - terraform-plan-validator check -p "$TERRAFORM_PLAN_PATH/plan.json" -c "aws"
    - export VALIDATION_PASSED=$(terraform-plan-validator check -p "$TERRAFORM_PLAN_PATH/plan.json" -c "aws")
    - SCORE=$(terraform-plan-validator opascore -p "$TERRAFORM_PLAN_PATH/plan.json" -c "aws")
    - echo "Validation result - $VALIDATION_PASSED"
    - echo "OPA score - $SCORE"
    - rm $TERRAFORM_PLAN_PATH/plan.json    
  environment:
    name: $TERRAFORM_ENV

.apply_template: &apply_template
  script:
    - terraform apply -input=false $PLAN
  when: manual
  only:
    - master
  environment:
    name: $TERRAFORM_ENV

destroy_uat:
  stage: destroy
  when: manual
  only:
    - master
    - /feature\/devops.+/
  variables:
    TERRAFORM_ENV: uat
  before_script:
    - cd $CI_PROJECT_DIR/environments/$TERRAFORM_ENV
    - terraform init
  script:
    - |
    - terraform destroy -auto-approve || true

validate_devops:
  <<: *validate_template
  variables:
    TERRAFORM_ENV: devops

plan_devops:
  <<: *plan_template
  variables:
    TERRAFORM_ENV: devops
  when: manual

apply_devops:
  stage: deploy
  <<: *apply_template
  dependencies:
    - plan_devops
  variables:
    TERRAFORM_ENV: devops

validate_dev:
  <<: *validate_template
  variables:
    TERRAFORM_ENV: dev

tfsec_report_dev:
  <<: *tfsec_report_template
  variables:
    TERRAFORM_ENV: dev    

plan_dev:
  <<: *plan_template
  variables:
    TERRAFORM_ENV: dev

opa_validate_dev:
  stage: validate opa
  <<: *terraform_plan_opa_validate_template
  dependencies:
    - plan_dev
  variables:
    TERRAFORM_ENV: dev

apply_dev:
  stage: deploy
  <<: *apply_template
  dependencies:
    - plan_dev
  variables:
    TERRAFORM_ENV: dev

validate_uat:
  <<: *validate_template
  variables:
    TERRAFORM_ENV: uat

tfsec_report_uat:
  <<: *tfsec_report_template
  variables:
    TERRAFORM_ENV: uat  

plan_uat:
  <<: *plan_template
  variables:
    TERRAFORM_ENV: uat

opa_validate_uat:
  stage: validate opa
  <<: *terraform_plan_opa_validate_template
  dependencies:
    - plan_uat
  variables:
    TERRAFORM_ENV: uat

apply_uat:
  stage: deploy
  <<: *apply_template
  dependencies:
    - plan_uat
  variables:
    TERRAFORM_ENV: uat

validate_prod:
  <<: *validate_template
  variables:
    TERRAFORM_ENV: prod

tfsec_report_prod:
  <<: *tfsec_report_template
  variables:
    TERRAFORM_ENV: prod   

plan_prod:
  <<: *plan_template
  variables:
    TERRAFORM_ENV: prod

opa_validate_prod:
  stage: validate opa
  <<: *terraform_plan_opa_validate_template
  dependencies:
    - plan_prod
  variables:
    TERRAFORM_ENV: prod

apply_prod:
  stage: deploy
  <<: *apply_template
  dependencies:
    - plan_prod
  variables:
    TERRAFORM_ENV: prod
